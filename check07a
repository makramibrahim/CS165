
/**********************
 * File: check07a.cpp
 **********************/

#include <iostream>
#include <string>
using namespace std;

#include "icecream.h"

/*****************************************
 * Function: Main
 * Purpose: Tests the Ice Cream class
 *****************************************/

int main()
{
   IceCream iceCream1;
   iceCream1.prompt();

   IceCream iceCream2;
   iceCream2.prompt();

   iceCream1.calcuMenu();
   iceCream2.calcuMenu();

   cout << "\nMenu:\n";
   iceCream1.display();
   iceCream2.display();
   cout << endl;

   float tax;
   cout << "Enter alternate sales tax: ";
   cin >> tax;

   //Set the sales tax static member variable here
   float temp = iceCream1.getTotalPrice() * tax;
   iceCream1.setSalesTax(iceCream1.getTotalPrice() + temp);

   float temp1 = iceCream2.getTotalPrice() * tax;
   iceCream2.setSalesTax(iceCream2.getTotalPrice() + temp1);


   cout << "\nMenu:\n";
   iceCream1.displayMenuTax();
   iceCream2.displayMenuTax();

   return 0;
}



/***********************************
 * File: icecream.cpp
 ***********************************/
#include "icecream.h"

#include <iostream>
#include <string>
#include <iomanip>
using namespace std;

/***********************************
 * Constructors
 * Defualt
 ***********************************/
IceCream::IceCream()
{
   flavor = "unknown";
   price = 0;
}

/***********************************
 * Constructors
 * Non-default
 ***********************************/
IceCream::IceCream(string flavor, float price)
{
   this->flavor = flavor;
   this->price = price;
}

/**********************************************************************
 * Function: IceCream::getTotalPrice
 * Purpose: Gets the total price of the ice cream, including sales tax.
 **********************************************************************/
void IceCream::calcuMenu()
{
    setMenuPrice(salesTax * price + price); 
}
/**********************************************************************
 * Function: IceCream::getTotalPrice
 * Purpose: Gets the total price of the ice cream, including sales tax.
 **********************************************************************/
float IceCream::getTotalPrice() const
{
   // TODO: Change this to include sales tax
   return price;
}

/**********************************************************************
 * Function: IceCream::SalesTax
 * Purpose: Gets the total price of the ice cream, including sales tax.
 **********************************************************************/
void IceCream::setSalesTax(float price)
{
   this->price = price;
}


/**********************************************************************
 * Function: IceCream::getTotalPrice
 * Purpose: Gets the total price of the ice cream, including sales tax.
 **********************************************************************/
void IceCream::setMenuPrice(float mPrice)
{
   menuPrice = mPrice;
}


/**********************************************************************
 * Function: IceCream::getTotalPrice
 * Purpose: Prompts the user for the values of ice cream.
 **********************************************************************/
void IceCream::prompt()
{
   cout << "Flavor: ";
   getline(cin, flavor);

   // It would be better to check for bad values here...
   cout << "Price: ";
   cin >> price;
   cin.ignore();
}

/**********************************************************************
 * Function: IceCream::display
 * Purpose: Displays the current ice cream.
 **********************************************************************/
void IceCream::display() const
{
   cout.setf(ios::fixed);
   cout.setf(ios::showpoint);
   cout.precision(2);

   // we call the getTotalPrice() method here, so it will
   // automatically updated when sales tax is taken into accout.
   cout << "$" << getMenuPrice() << " - " << flavor << endl;
}


/**********************************************************************
 * Function: IceCream::display
 * Purpose: Displays the current ice cream.
 **********************************************************************/
void IceCream::displayMenuTax() const
{
   cout.setf(ios::fixed);
   cout.setf(ios::showpoint);
   cout.precision(2);

   // we call the getTotalPrice() method here, so it will
   // automatically updated when sales tax is taken into accout.
   cout << "$" << getTotalPrice() << " - " << flavor << endl;
}


/****************************
 * File: icecream.h
 ****************************/
#ifndef ICECREAM_H
#define ICECREAM_H

#include <string>

static float salesTax = 0.06;

class IceCream
{
private:
   std::string flavor;
   float price;
   float menuPrice;

public:
   /*******************
    * Constructors
    *******************/
   IceCream();
   IceCream(std::string flavor, float price);

   /*******************
    * Getters
    *******************/
   float getTotalPrice()         const;
   float getMenuPrice()          const { return menuPrice; }
   
    /*******************
    * Setters
    *******************/
   void setTotalPrice(float setPrice);      
   void setMenuPrice(float mPrice);  
   void setSalesTax(float price);        

   /*******************
    * Prompt
    *******************/
   void prompt();
   void calcuMenu();

   /*******************
    * Display
    *******************/
   void display()                const;
   void displayMenuTax()         const;
   
};


#endif // icecream.h

###############################################################
# Program:
#     Checkpoint 07a, Static
#     Brother McCracken, CS165
# Author:
#     Makram Ibrahim
# Summary:
#     Summaries are not necessary for checkpoint assignments.
###############################################################


a.out : icecream.o check07a.o
	g++ icecream.o check07a.o

icecream.o : icecream.h icecream.cpp
	g++ -c icecream.cpp

check07a.o : icecream.h check07a.cpp
	g++ -c check07a.cpp

clean :
	rm *.o
	rm a.out
